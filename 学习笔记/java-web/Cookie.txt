什么是Cookie?
    由于http协议是无状态的,所以用Cookie来保持用户状态,保存用户自定义设置等
    Cookie是一组key/value(键值对)数据,Cookie的属性有: Name, Value, Domain, Path, Expires(MaxAge), HttpOnly, Secure, Comment
    cookie的最大体积限制是4kb.
    Cookie是服务端随Response颁发给客户端的一个认证,用于辨识用户状态
Cookie是怎么产生的?
    1.客户端发送request给服务器
    2.服务器处理请求,并生成cookie,随response返回客户端.
    3.客户端接收cookie
    4.客户端下次发送请求时,会将cookie一并发送到服务器.然后形成循环
    
    cookie和set-cookie的区别?
        set-cookie: 是响应头中的数据,包含了cookie的基本信息,(name, value, Path等等)
                    用于通知客户端保存该cookie信息
        cookie: 在请求头中,只有name=value的键值对,客户端向服务器发送cookie的时候仅仅发送name和value,其他属性不发送
                cookie的其他属性是保存在浏览器的,
                用于判断cookie的过期时间(MaxAge), 发送的时机(Domain, Path, Secure), 是否可以被js获取(HttpOnly), 注释信息(Comment)
                    Secure: 是否只能用安全协议传输(如HTTPS, SSL等).如果为true, 则发送http请求的时候不会带上该cookie
                    HttpOnly: 是否能够被js获取到该cookie,为true的时候,无法使用document.cookie获取该cookie

Cookie的保存时间?
    默认是在一次会话中有效,如果通过Cookie.setMaxAge()来设置有效期的话,则cookie能够在会话结束后被浏览器写入硬盘,持续存在
    MaxAge的取值:
        正数: cookie的存活时间,到期自动销毁(由客户端执行),发送到客户端后开始计时.
        0:  立即销毁当前cookie
        负数: 表示该cookie随会话结束被销毁

修改或删除cookie时要注意!
    HttpServletResponse只有一个addCookie()方法可以操作cookie,
    所以要先用同名的cookie替换掉原来的cookie,然后再执行修改或删除操作
    ***注意: 修改、删除Cookie时，新建的Cookie除value、maxAge之外的所有属性，
            例如name、path、domain等，都要与原Cookie完全一样。否则，浏览器将视为两个不同的Cookie不予覆盖，导致修改、删除失败。
Cookie的域名:
    Cookie是不可以跨域名的,即使是同一个一级域名下的两个二级域名也不能交互使用,比如:www.baidu.com和m.baodu.com(一级域名是baidu.com)
    如何在相同一级域名下的二级域名之间跨域名使用cookie?
        把domain的值前加上点(.), 比如".baidu.com", 这样该cookie就可以在baidu.com的所有二级域名下使用了
Cookie存储中文的问题
    Cookie中默认不能存储中文,所以可以在存储的时候使用URLEncoder.encode()编码后存入,在取出时使用URLDecoder.decode()解码后取出
