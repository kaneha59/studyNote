对于分叉的分支,除了三方合并,还可以使用变基.

什么是变基:
    对于两个分叉的分支,把当前分支的祖先修改为基底分支

变基的原理:
    1.找到分叉的2个分支的最近共同祖先
    2.对比当前分支相对于该祖先的历次提交,提取相应的修改并保存为临时文件
    3.将之前的临时文件依次应用于目标基底,在基底分支后生成新的commit.
    4.查看log,发现当前分支指向基底分支后的新commit,旧的提交记录消失(当前分支变基前的那个提交)

图示:
    变基前:
                                        test
                                  <----  C4
        C0  <----  C1  <----  C2  <----  C3
                                       master

    变基后:
                                                   test
        C0  <----  C1  <----  C2  <----  C3  <----  C4'
                                        master

    三方合并对比:
                                                   test
                                  <----  C4  <---- 
        C0  <----  C1  <----  C2  <----  C3  <----  C5
                                        master

使用变基的原则:
    仅仅只在本地存在的提交才能使用变基,绝不对已推送至别处的提交执行变基操作

使用变基时怎么处理冲突?
    1.手动处理冲突的文件.
    2.把处理完的文件add到缓存区域
    3.执行git rebase --continue (不是直接commit!)
    举个例子:
        git add .
        git rebase --continue
    流程和三方合并中处理冲突不一样,三方合并时是处理完冲突后直接add接commit

git rebase <基底分支>: 为当前分支基于基底分支执行变基
    git rebase --skip: 抛弃当前分支的commit,采用基底的commit(慎用!会丢失当前分支的数据)
    git rebase --abort: 中止此次rebase
    git rebase --continue: 解决完冲突并添加至缓存后(add),执行此命令执行变基.(不要手动commit)

拉取时使用变基:
    git pull --rebase