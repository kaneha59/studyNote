一级缓存:
    MyBatis的一级缓存默认开启.
    作用域: session. session关闭的同时清空一级缓存.不同session之间进行相同的SQL查询时要查询两次数据库,session之间一级缓存不互通.
    Mybatis和Spring整合后:
        没有开启事务:
            每一次sql都是用的新的sqlsession,此时一级缓存失效
        开启事务:
            开启事务的话,事物内使用同一个sqlsession
    一级缓存可能导致的问题:
        在 读已提交 隔离级别下,同一个事物两次查询的中间,
        其他线程修改了这条数据,但查到的数据依然相同.
        好像隔离级别是 可重复读 一样.
        (二级缓存不会碰到这个问题...因为其他人修改数据会刷新缓存)
        解决办法:
            1.关闭一级缓存 2.或者在Mapper文件中,给这个<SELECT>标签添加flushCahce=true属性
二级缓存:
    作用域: Mapper(namespace),操作同一Mapper中SQL语句的SqlSession可以共用二级缓存
    如何开启二级缓存:
        在SQL映射文件中添加<cache/>即可,详细配置暂不讲或参阅MyBatis官方文档
        也可以引用其他SQL映射文件中的二级缓存配置:
            <cache-ref namespace="com.someone.application.data.SomeMapper"/>
    关于混用XML映射文件和Java API:
        只有配置在XML映射文件中的SQL语句才能使用二级缓存
    缓存刷新:
        增删改查:
            <select>默认: flushCache=false
            增删改默认: flushCache=true
            所以增删改过的话需要重新连接数据库查询了
        二级缓存的事务性:
            不懂...具体看下边

这句话怎么理解?
    二级缓存是事务性的。
    这意味着，当 SqlSession 完成并提交时，或是完成并回滚，
    但没有执行 flushCache=true 的 insert/delete/update 语句时，缓存会获得更新。
    
    获得更新是什么意思?怎么个更新法?是清空二级缓存么?
    如果一个事务不执行增删改操作,还有必要开启事务?
    如果回滚的话,事实上也没有进行增删改操作,为什么也要"更新"?

flushCache=true ==> 会同时刷新一二级缓存